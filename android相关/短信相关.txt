获取默认短信应用的包名：
Class c = Class.forName("android.provider.Telephony$Sms");
Method m = c.getDeclaredMethod("getDefaultSmsPackage", new Class[]{Context.class});
m.setAccessible(true);
m.invoke(c, new Object[]{context});

在Root下发送短信到来广播：
        ActivityManagerNative.getDefault().broadcastIntent(null, SmsUtils.getSmsIntent(), null, null, Activity.RESULT_OK, null, null, "android.permission.RECEIVE_SMS", -1, true, false, -1);


创建pdu的SmsUtils.java：

package com.tencent.smsinjector;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;

import android.app.PendingIntent.CanceledException;
import android.content.Intent;
import android.telephony.PhoneNumberUtils;
import android.telephony.SmsManager;
import android.util.Log;

public class SmsUtils {
	public static final String TAG = "SmsInjector";
	private static byte reverseByte(byte b) {
		return (byte) ((b & 0xF0) >> 4 | (b & 0x0F) << 4);
	}

	public static Intent getSmsIntent(String number, String body) throws CanceledException {
		SmsManager smsManager = SmsManager.getDefault();
		ArrayList<String> messages = smsManager.divideMessage(body);
		int size = messages.size();
		Object[] objArray = new Object[size];
		for(int i=0;i<size;++i) {
			byte[] pduu = createFakeSms(number, messages.get(i));
			Log.e(TAG, "user: " + pduu.length + " -> " + toString(pduu));
			objArray[i] = pduu;
		}
		Intent intent = new Intent();
		// 小米需要使用SMS_RECEIVED
		intent.setAction("android.provider.Telephony.SMS_RECEIVED");
//		intent.setComponent(null);
//		intent.addFlags(Intent.FLAG_RECEIVER_NO_ABORT);
//		intent.setAction("android.provider.Telephony.SMS_DELIVER");
		intent.putExtra("pdus", objArray);
		intent.putExtra("format", "3gpp");
		// 非电信机
		intent.putExtra("subscription", 1);
		return intent;
	}

	public static String toString(byte[] bytes) {
		StringBuffer buf = new StringBuffer();
		for(byte b : bytes) {
			buf.append(b).append(", ");
		}
		return buf.toString();
	}

	public static byte[] createFakeSms(String sender, String body) {
		sender = sender.trim();
		body = body.trim();
		// Source: http://stackoverflow.com/a/12338541
		// Source:
		// http://blog.dev001.net/post/14085892020/android-generate-incoming-sms-from-within-your-app
		byte[] pdu = null;
		byte[] scBytes = PhoneNumberUtils.networkPortionToCalledPartyBCD("15817015427");
		byte[] senderBytes = PhoneNumberUtils.networkPortionToCalledPartyBCD(sender);
		int lsmcs = scBytes.length;
		// 时间处理，包括年月日时分秒以及时区和夏令时
		byte[] dateBytes = new byte[7];
		Calendar calendar = new GregorianCalendar();
		dateBytes[0] = reverseByte((byte) (calendar.get(Calendar.YEAR)));
		dateBytes[1] = reverseByte((byte) (calendar.get(Calendar.MONTH) + 1));
		dateBytes[2] = reverseByte((byte) (calendar.get(Calendar.DAY_OF_MONTH)));
		dateBytes[3] = reverseByte((byte) (calendar.get(Calendar.HOUR_OF_DAY)));
		dateBytes[4] = reverseByte((byte) (calendar.get(Calendar.MINUTE)));
		dateBytes[5] = reverseByte((byte) (calendar.get(Calendar.SECOND)));
		dateBytes[6] = reverseByte((byte) ((calendar.get(Calendar.ZONE_OFFSET) + calendar.get(Calendar.DST_OFFSET)) / (60 * 1000 * 15)));
		try {
			ByteArrayOutputStream bo = new ByteArrayOutputStream();
			bo.write(lsmcs);// 短信服务中心长度
			bo.write(scBytes);// 短信服务中心号码
			bo.write(0x04);
			bo.write((byte) sender.length());// 发送方号码长度
			bo.write(senderBytes);// 发送方号码
			bo.write(0x00);// 协议标示，00为普通GSM，点对点方式
			try {
				String sReflectedClassName = "com.android.internal.telephony.GsmAlphabet";
				Class<?> cReflectedNFCExtras = Class.forName(sReflectedClassName);
				Method stringToGsm7BitPacked = cReflectedNFCExtras.getMethod("stringToGsm7BitPacked", new Class[] { String.class });
				stringToGsm7BitPacked.setAccessible(true);
				byte[] bodybytes = (byte[]) stringToGsm7BitPacked.invoke(null, body);

				bo.write(0x00); // encoding: 0 for default 7bit
				bo.write(dateBytes);
				bo.write(bodybytes);
			} catch (Exception e) {
				// 下面是UCS-2编码的处理，中文短信就需要用此种方式
				byte[] bodyBytes = encodeUCS2(body, null);
				bo.write(0x08); // encoding: 8 for UCS-2
				bo.write(dateBytes);
				bo.write(bodyBytes);// 其中encodeUCS2是从系统中复制过来的，并不是我写的
				// 源码具体位置在
				// frameworks/base/telephony/java/com/android/internal/telephony/gsm/SmsMessage.java
			}

			pdu = bo.toByteArray();
			Log.e(TAG, "send pdu length: " + pdu.length + " -> " + body);
		} catch (IOException e) {
		}
		return pdu;
	}

	/**
	 * Packs header and UCS-2 encoded message. Includes TP-UDL & TP-UDHL if
	 * necessary
	 * 
	 * @return
	 * @throws UnsupportedEncodingException
	 */
	private static byte[] encodeUCS2(String message, byte[] header) throws UnsupportedEncodingException {
		byte[] userData, textPart;
		textPart = message.getBytes("utf-16be");

		if (header != null) {
			// Need 1 byte for UDHL
			userData = new byte[header.length + textPart.length + 1];

			userData[0] = (byte) header.length;
			System.arraycopy(header, 0, userData, 1, header.length);
			System.arraycopy(textPart, 0, userData, header.length + 1, textPart.length);
		} else {
			userData = textPart;
		}
		byte[] ret = new byte[userData.length + 1];
		ret[0] = (byte) (userData.length & 0xff);
		System.arraycopy(userData, 0, ret, 1, userData.length);
		return ret;
	}
}
